{"ast":null,"code":"import axios from \"axios\";\nimport queryString from \"query-string\";\nimport CallApi from \"./CallApi\";\nimport KeyApi from \"./KeyApi\";\nconst UserAxios = axios.create({\n  baseURL: CallApi.link,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  paramsSerializer: params => queryString.stringify({ ...params,\n    api_key: kEY.key\n  })\n});\nUserAxios.interceptors.request.use(async config => config);\nUserAxios.interceptors.response.use(response => {\n  if (response && response.data) {\n    return response.data;\n  }\n\n  return response;\n});\nexport default UserAxios;","map":{"version":3,"sources":["H:/Proyecto/react-wikishow/src/api/UserAxios.js"],"names":["axios","queryString","CallApi","KeyApi","UserAxios","create","baseURL","link","headers","paramsSerializer","params","stringify","api_key","kEY","key","interceptors","request","use","config","response","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,SAAS,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAEJ,OAAO,CAACK,IADY;AAE7BC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT,GAFoB;AAK7BC,EAAAA,gBAAgB,EAAGC,MAAD,IAChBT,WAAW,CAACU,SAAZ,CAAsB,EAAE,GAAGD,MAAL;AAAaE,IAAAA,OAAO,EAAEC,GAAG,CAACC;AAA1B,GAAtB;AAN2B,CAAb,CAAlB;AASAV,SAAS,CAACW,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmC,MAAOC,MAAP,IAAkBA,MAArD;AAEAd,SAAS,CAACW,YAAV,CAAuBI,QAAvB,CAAgCF,GAAhC,CAAqCE,QAAD,IAAc;AAChD,MAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAzB,EAA+B;AAC7B,WAAOD,QAAQ,CAACC,IAAhB;AACD;;AACD,SAAOD,QAAP;AACD,CALD;AAOA,eAAef,SAAf","sourcesContent":["import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nimport CallApi from \"./CallApi\";\r\nimport KeyApi from \"./KeyApi\";\r\n\r\nconst UserAxios = axios.create({\r\n  baseURL: CallApi.link,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  paramsSerializer: (params) =>\r\n    queryString.stringify({ ...params, api_key: kEY.key }),\r\n});\r\n\r\nUserAxios.interceptors.request.use(async (config) => config);\r\n\r\nUserAxios.interceptors.response.use((response) => {\r\n  if (response && response.data) {\r\n    return response.data;\r\n  }\r\n  return response;\r\n});\r\n\r\nexport default UserAxios;\r\n"]},"metadata":{},"sourceType":"module"}