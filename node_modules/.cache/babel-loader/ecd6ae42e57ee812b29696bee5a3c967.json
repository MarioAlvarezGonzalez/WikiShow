{"ast":null,"code":"import axios from \"axios\";\nimport queryString from \"query-string\";\nimport AccessApi from \"./AccessApi\";\nconst AxiosUser = axios.create({\n  baseURL: AccessApi.link,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  paramsSerializer: params => queryString.stringify({ ...params,\n    api_key: AccessApi.key\n  })\n});\nAxiosUser.interceptors.request.use(async config => config);\nAxiosUser.interceptors.response.use(response => {\n  return response.data;\n});\nexport default AxiosUser;","map":{"version":3,"sources":["H:/Proyecto/react-wikishow/src/api/AxiosUser.js"],"names":["axios","queryString","AccessApi","AxiosUser","create","baseURL","link","headers","paramsSerializer","params","stringify","api_key","key","interceptors","request","use","config","response","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAEHH,SAAS,CAACI,IAHe;AAK7BC,EAAAA,OAAO,EACP;AACE,oBAAgB;AADlB,GAN6B;AAS7BC,EAAAA,gBAAgB,EAAGC,MAAD,IAChBR,WAAW,CAACS,SAAZ,CAAsB,EAAE,GAAGD,MAAL;AAAaE,IAAAA,OAAO,EAAET,SAAS,CAACU;AAAhC,GAAtB;AAV2B,CAAb,CAAlB;AAaAT,SAAS,CAACU,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACK,MAAOC,MAAP,IAAkBA,MADvB;AAGAb,SAAS,CAACU,YAAV,CAAuBI,QAAvB,CAAgCF,GAAhC,CAAqCE,QAAD,IAAc;AAC9C,SAAOA,QAAQ,CAACC,IAAhB;AACH,CAFD;AAIA,eAAef,SAAf","sourcesContent":["import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nimport AccessApi from \"./AccessApi\";\r\n\r\nconst AxiosUser = axios.create({\r\n  baseURL: \r\n  (\r\n      AccessApi.link\r\n    ),\r\n  headers: \r\n  {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  paramsSerializer: (params) =>\r\n    queryString.stringify({ ...params, api_key: AccessApi.key })\r\n})\r\n\r\nAxiosUser.interceptors.request.use(\r\n    (async (config) => config)\r\n)\r\nAxiosUser.interceptors.response.use((response) => {\r\n    return response.data;\r\n})\r\n\r\nexport default AxiosUser;\r\n"]},"metadata":{},"sourceType":"module"}