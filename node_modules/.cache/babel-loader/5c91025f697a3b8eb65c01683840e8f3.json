{"ast":null,"code":"import axiosClient from \"./axiosClient\";\nexport const category = {\n  movie: 'movie',\n  tv: 'tv',\n  person: 'person'\n};\nexport const movieType = {\n  getMoviesList: (type, params) => {\n    const url = 'movie/' + movieType[type];\n    return axiosClient.get(url, params);\n  }\n};\nexport const tvType = {};\nexport const personType = {};\nconst tmdbApi = {\n  getMoviesList: (type, params) => {\n    const url = 'movie/' + movieType[type];\n    return axiosClient.get(url, params);\n  },\n  getTvList: (type, params) => {\n    const url = 'tv/' + tvType[type];\n    return axiosClient.get(url, params);\n  },\n  getPersonList: (type, params) => {\n    const url = 'person/' + personType[type];\n    return axiosClient.get(url, params);\n  },\n  getVideos: (cate, id) => {\n    const url = category[cate] + '/' + id + '/videos';\n    return axiosClient.get(url, {\n      params: {}\n    });\n  },\n  search: (cate, params) => {\n    const url = 'search/' + category[cate];\n    return axiosClient.get(url, params);\n  },\n  detail: (cate, id, params) => {\n    const url = category[cate] + '/' + id;\n    return axiosClient.get(url, params);\n  },\n  credits: (cate, id) => {\n    const url = category[cate] + '/' + id + '/credits';\n    return axiosClient.get(url, {\n      params: {}\n    });\n  }\n  /*\r\n  similar: (cate, id) => {\r\n      const url = category[cate] + '/' + id + '/similar';\r\n      return axiosClient.get(url, {params: {}});\r\n  },*/\n\n};\nexport default tmdbApi;","map":{"version":3,"sources":["H:/Proyecto/react-wikishow/src/api/tmdbApi.js"],"names":["axiosClient","category","movie","tv","person","movieType","getMoviesList","type","params","url","get","tvType","personType","tmdbApi","getTvList","getPersonList","getVideos","cate","id","search","detail","credits"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,KAAK,EAAE,OADa;AAEpBC,EAAAA,EAAE,EAAE,IAFgB;AAGpBC,EAAAA,MAAM,EAAG;AAHW,CAAjB;AAMP,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,aAAa,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,UAAMC,GAAG,GAAG,WAAWJ,SAAS,CAACE,IAAD,CAAhC;AACA,WAAOP,WAAW,CAACU,GAAZ,CAAgBD,GAAhB,EAAqBD,MAArB,CAAP;AACH;AAJoB,CAAlB;AAOP,OAAO,MAAMG,MAAM,GAAG,EAAf;AAIP,OAAO,MAAMC,UAAU,GAAG,EAAnB;AAIP,MAAMC,OAAO,GAAG;AACZP,EAAAA,aAAa,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,UAAMC,GAAG,GAAG,WAAWJ,SAAS,CAACE,IAAD,CAAhC;AACA,WAAOP,WAAW,CAACU,GAAZ,CAAgBD,GAAhB,EAAqBD,MAArB,CAAP;AACH,GAJW;AAKZM,EAAAA,SAAS,EAAE,CAACP,IAAD,EAAOC,MAAP,KAAkB;AACzB,UAAMC,GAAG,GAAG,QAAQE,MAAM,CAACJ,IAAD,CAA1B;AACA,WAAOP,WAAW,CAACU,GAAZ,CAAgBD,GAAhB,EAAqBD,MAArB,CAAP;AACH,GARW;AASZO,EAAAA,aAAa,EAAE,CAACR,IAAD,EAAOC,MAAP,KAAkB;AAC7B,UAAMC,GAAG,GAAG,YAAYG,UAAU,CAACL,IAAD,CAAlC;AACA,WAAOP,WAAW,CAACU,GAAZ,CAAgBD,GAAhB,EAAqBD,MAArB,CAAP;AACH,GAZW;AAaZQ,EAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,EAAP,KAAc;AACrB,UAAMT,GAAG,GAAGR,QAAQ,CAACgB,IAAD,CAAR,GAAiB,GAAjB,GAAuBC,EAAvB,GAA4B,SAAxC;AACA,WAAOlB,WAAW,CAACU,GAAZ,CAAgBD,GAAhB,EAAqB;AAACD,MAAAA,MAAM,EAAE;AAAT,KAArB,CAAP;AACH,GAhBW;AAkBZW,EAAAA,MAAM,EAAE,CAACF,IAAD,EAAOT,MAAP,KAAkB;AACtB,UAAMC,GAAG,GAAG,YAAYR,QAAQ,CAACgB,IAAD,CAAhC;AACA,WAAOjB,WAAW,CAACU,GAAZ,CAAgBD,GAAhB,EAAqBD,MAArB,CAAP;AACH,GArBW;AAsBZY,EAAAA,MAAM,EAAE,CAACH,IAAD,EAAOC,EAAP,EAAWV,MAAX,KAAsB;AAC1B,UAAMC,GAAG,GAAGR,QAAQ,CAACgB,IAAD,CAAR,GAAiB,GAAjB,GAAuBC,EAAnC;AACA,WAAOlB,WAAW,CAACU,GAAZ,CAAgBD,GAAhB,EAAqBD,MAArB,CAAP;AACH,GAzBW;AA4BZa,EAAAA,OAAO,EAAE,CAACJ,IAAD,EAAOC,EAAP,KAAc;AACnB,UAAMT,GAAG,GAAGR,QAAQ,CAACgB,IAAD,CAAR,GAAiB,GAAjB,GAAuBC,EAAvB,GAA4B,UAAxC;AACA,WAAOlB,WAAW,CAACU,GAAZ,CAAgBD,GAAhB,EAAqB;AAACD,MAAAA,MAAM,EAAE;AAAT,KAArB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;AApCgB,CAAhB;AAwCA,eAAeK,OAAf","sourcesContent":["import axiosClient from \"./axiosClient\";\r\n\r\nexport const category = {\r\n    movie: 'movie',\r\n    tv: 'tv',\r\n    person : 'person'\r\n}\r\n\r\nexport const movieType = {\r\n    getMoviesList: (type, params) => {\r\n        const url = 'movie/' + movieType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n}\r\n\r\nexport const tvType = {\r\n   \r\n  \r\n}\r\nexport const personType = {\r\n  \r\n}\r\n\r\nconst tmdbApi = {\r\n    getMoviesList: (type, params) => {\r\n        const url = 'movie/' + movieType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getTvList: (type, params) => {\r\n        const url = 'tv/' + tvType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getPersonList: (type, params) => {\r\n        const url = 'person/' + personType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getVideos: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/videos';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    \r\n    search: (cate, params) => {\r\n        const url = 'search/' + category[cate];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    detail: (cate, id, params) => {\r\n        const url = category[cate] + '/' + id;\r\n        return axiosClient.get(url, params);\r\n    },\r\n    \r\n\r\n    credits: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/credits';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    /*\r\n    similar: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/similar';\r\n        return axiosClient.get(url, {params: {}});\r\n    },*/\r\n   \r\n}\r\n\r\nexport default tmdbApi;"]},"metadata":{},"sourceType":"module"}