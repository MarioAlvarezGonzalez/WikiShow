{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyecto\\\\react-wikishow\\\\src\\\\components\\\\movie-list\\\\MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport ConfigApi, { category } from '../../api/ConfigApi';\nimport MovieCard from '../movie-card/MovieCard';\nimport './movie-list.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {};\n\n      if (props.type !== 'similar') {\n        switch (props.category) {\n          case category.movie:\n            response = await ConfigApi.getMoviesList(props.type, {\n              params\n            });\n            break;\n\n          default:\n            response = await ConfigApi.getTvList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await ConfigApi.similar(props.category, props.id);\n      }\n\n      setItems(response.results);\n    };\n\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        grabCursor: true,\n        spaceBetween: 9,\n        slidesPerView: 'auto',\n        children: items.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(MovieCard, {\n            item: item,\n            category: props.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["H:/Proyecto/react-wikishow/src/components/movie-list/MovieList.jsx"],"names":["React","useState","useEffect","SwiperSlide","Swiper","ConfigApi","category","MovieCard","MovieList","props","items","setItems","getList","response","params","type","movie","getMoviesList","getTvList","similar","id","results","map","item","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,cAApC;AAEA,OAAOC,SAAP,IAAoBC,QAApB,QAAoC,qBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAO,mBAAP;;;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,OAAO,GAAG,YAAY;AACxB,UAAIC,QAAQ,GAAG,IAAf;AACA,YAAMC,MAAM,GAAG,EAAf;;AACA,UAAIL,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AAC1B,gBAAQN,KAAK,CAACH,QAAd;AACI,eAAKA,QAAQ,CAACU,KAAd;AACIH,YAAAA,QAAQ,GAAG,MAAMR,SAAS,CAACY,aAAV,CAAwBR,KAAK,CAACM,IAA9B,EAAoC;AAAED,cAAAA;AAAF,aAApC,CAAjB;AACA;;AACJ;AACID,YAAAA,QAAQ,GAAG,MAAMR,SAAS,CAACa,SAAV,CAAoBT,KAAK,CAACM,IAA1B,EAAgC;AAAED,cAAAA;AAAF,aAAhC,CAAjB;AALR;AAQH,OATD,MASO;AACHD,QAAAA,QAAQ,GAAG,MAAMR,SAAS,CAACc,OAAV,CAAkBV,KAAK,CAACH,QAAxB,EAAkCG,KAAK,CAACW,EAAxC,CAAjB;AACH;;AACDT,MAAAA,QAAQ,CAACE,QAAQ,CAACQ,OAAV,CAAR;AACH,KAhBD;;AAiBAT,IAAAA,OAAO;AACV,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,UAAU,EAAE,IADhB;AAEI,QAAA,YAAY,EAAE,CAFlB;AAGI,QAAA,aAAa,EAAE,MAHnB;AAAA,kBAMQF,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACN,QAAC,WAAD;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,IAAI,EAAED,IAAjB;AAAuB,YAAA,QAAQ,EAAEd,KAAK,CAACH;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ,WAAkBkB,CAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AANR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAmBH,CA5CD;;GAAMhB,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SwiperSlide, Swiper } from 'swiper/react';\n\nimport ConfigApi, { category } from '../../api/ConfigApi';\nimport MovieCard from '../movie-card/MovieCard';\n\nimport './movie-list.scss';\n\n\nconst MovieList = props => {\n\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = {};\n            if (props.type !== 'similar') {\n                switch (props.category) {\n                    case category.movie:\n                        response = await ConfigApi.getMoviesList(props.type, { params });\n                        break;\n                    default:\n                        response = await ConfigApi.getTvList(props.type, { params });\n\n                }\n            } else {\n                response = await ConfigApi.similar(props.category, props.id);\n            }\n            setItems(response.results);\n        }\n        getList();\n    }, []);\n\n    return (\n        <>\n            <div className=\"movie-list\">\n                <Swiper\n                    grabCursor={true}\n                    spaceBetween={9}\n                    slidesPerView={'auto'}\n                >\n                    {\n                        items.map((item, i) => (\n                            <SwiperSlide key={i}>\n                                <MovieCard item={item} category={props.category} />\n                            </SwiperSlide>\n                        ))\n                    }\n                </Swiper>\n            </div>\n        </>\n    );\n}\n\n\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}