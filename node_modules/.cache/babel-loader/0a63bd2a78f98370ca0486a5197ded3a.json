{"ast":null,"code":"import AxiosUser from \"./AxiosUser\";\nexport const category = {\n  movie: 'movie',\n  tv: 'tv',\n  person: 'person'\n};\nexport const movie = {\n  upcoming: 'upcoming',\n  popular: 'popular',\n  top_rated: 'top_rated'\n};\nexport const tv = {\n  popular: 'popular',\n  top_rated: 'top_rated',\n  on_the_air: 'on_the_air'\n};\nexport const person = {\n  popular: 'popular',\n  movie_credits: 'movie_credits'\n};\nconst ConfigApi = {\n  getMoviesList: (category, params) => {\n    const the_url = 'movie/' + movie[category];\n    return AxiosUser.get(the_url, params);\n  },\n  getTvList: (category, params) => {\n    const the_url = 'tv/' + tv[category];\n    return AxiosUser.get(the_url, params);\n  },\n  getPersonList: (category, params) => {\n    const the_url = 'person/' + person[category];\n    return AxiosUser.get(the_url, params);\n  },\n  getVideos: (type, id) => {\n    const the_url = category[type] + '/' + id + '/videos';\n    return AxiosUser.get(the_url, {\n      params: {}\n    });\n  },\n  search: (type, params) => {\n    const the_url = 'search/' + category[type];\n    return AxiosUser.get(the_url, params);\n  },\n  type: (type, id, params) => {\n    const the_url = category[type] + '/' + id;\n    return AxiosUser.get(the_url, params);\n  },\n  credits: (type, id) => {\n    const the_url = category[type] + '/' + id + '/credits';\n    return AxiosUser.get(the_url, {\n      params: {}\n    });\n  },\n  similar: (type, id) => {\n    const the_url = category[type] + '/' + id + '/similar';\n    return AxiosUser.get(the_url, {\n      params: {}\n    });\n  }\n};\nexport default ConfigApi;","map":{"version":3,"sources":["H:/Proyecto/react-wikishow/src/api/ConfigApi.js"],"names":["AxiosUser","category","movie","tv","person","upcoming","popular","top_rated","on_the_air","movie_credits","ConfigApi","getMoviesList","params","the_url","get","getTvList","getPersonList","getVideos","type","id","search","credits","similar"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AAEA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,KAAK,EAAE,OADa;AAEpBC,EAAAA,EAAE,EAAE,IAFgB;AAGpBC,EAAAA,MAAM,EAAG;AAHW,CAAjB;AAMP,OAAO,MAAMF,KAAK,GAAG;AACjBG,EAAAA,QAAQ,EAAE,UADO;AAEjBC,EAAAA,OAAO,EAAE,SAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAAd;AAMP,OAAO,MAAMJ,EAAE,GAAG;AACdG,EAAAA,OAAO,EAAE,SADK;AAEdC,EAAAA,SAAS,EAAE,WAFG;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAX;AAMP,OAAO,MAAMJ,MAAM,GAAG;AAClBE,EAAAA,OAAO,EAAE,SADS;AAElBG,EAAAA,aAAa,EAAE;AAFG,CAAf;AAKP,MAAMC,SAAS,GAAG;AACdC,EAAAA,aAAa,EAAE,CAACV,QAAD,EAAWW,MAAX,KAAsB;AACjC,UAAMC,OAAO,GAAG,WAAWX,KAAK,CAACD,QAAD,CAAhC;AACA,WAAOD,SAAS,CAACc,GAAV,CAAcD,OAAd,EAAuBD,MAAvB,CAAP;AACH,GAJa;AAKdG,EAAAA,SAAS,EAAE,CAACd,QAAD,EAAWW,MAAX,KAAsB;AAC7B,UAAMC,OAAO,GAAG,QAAQV,EAAE,CAACF,QAAD,CAA1B;AACA,WAAOD,SAAS,CAACc,GAAV,CAAcD,OAAd,EAAuBD,MAAvB,CAAP;AACH,GARa;AASdI,EAAAA,aAAa,EAAE,CAACf,QAAD,EAAWW,MAAX,KAAsB;AACjC,UAAMC,OAAO,GAAG,YAAYT,MAAM,CAACH,QAAD,CAAlC;AACA,WAAOD,SAAS,CAACc,GAAV,CAAcD,OAAd,EAAuBD,MAAvB,CAAP;AACH,GAZa;AAadK,EAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,EAAP,KAAc;AACrB,UAAMN,OAAO,GAAGZ,QAAQ,CAACiB,IAAD,CAAR,GAAiB,GAAjB,GAAuBC,EAAvB,GAA4B,SAA5C;AACA,WAAOnB,SAAS,CAACc,GAAV,CAAcD,OAAd,EAAuB;AAACD,MAAAA,MAAM,EAAE;AAAT,KAAvB,CAAP;AACH,GAhBa;AAkBdQ,EAAAA,MAAM,EAAE,CAACF,IAAD,EAAON,MAAP,KAAkB;AACtB,UAAMC,OAAO,GAAG,YAAYZ,QAAQ,CAACiB,IAAD,CAApC;AACA,WAAOlB,SAAS,CAACc,GAAV,CAAcD,OAAd,EAAuBD,MAAvB,CAAP;AACH,GArBa;AAsBdM,EAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,EAAP,EAAWP,MAAX,KAAsB;AACxB,UAAMC,OAAO,GAAGZ,QAAQ,CAACiB,IAAD,CAAR,GAAiB,GAAjB,GAAuBC,EAAvC;AACA,WAAOnB,SAAS,CAACc,GAAV,CAAcD,OAAd,EAAuBD,MAAvB,CAAP;AACH,GAzBa;AA0BdS,EAAAA,OAAO,EAAE,CAACH,IAAD,EAAOC,EAAP,KAAc;AACnB,UAAMN,OAAO,GAAGZ,QAAQ,CAACiB,IAAD,CAAR,GAAiB,GAAjB,GAAuBC,EAAvB,GAA4B,UAA5C;AACA,WAAOnB,SAAS,CAACc,GAAV,CAAcD,OAAd,EAAuB;AAACD,MAAAA,MAAM,EAAE;AAAT,KAAvB,CAAP;AACH,GA7Ba;AA+BdU,EAAAA,OAAO,EAAE,CAACJ,IAAD,EAAOC,EAAP,KAAc;AACnB,UAAMN,OAAO,GAAGZ,QAAQ,CAACiB,IAAD,CAAR,GAAiB,GAAjB,GAAuBC,EAAvB,GAA4B,UAA5C;AACA,WAAOnB,SAAS,CAACc,GAAV,CAAcD,OAAd,EAAuB;AAACD,MAAAA,MAAM,EAAE;AAAT,KAAvB,CAAP;AACH;AAlCa,CAAlB;AAsCA,eAAeF,SAAf","sourcesContent":["import AxiosUser from \"./AxiosUser\";\r\n\r\nexport const category = {\r\n    movie: 'movie',\r\n    tv: 'tv',\r\n    person : 'person'\r\n}\r\n\r\nexport const movie = {\r\n    upcoming: 'upcoming',\r\n    popular: 'popular',\r\n    top_rated: 'top_rated'\r\n}\r\n\r\nexport const tv = {\r\n    popular: 'popular',\r\n    top_rated: 'top_rated',\r\n    on_the_air: 'on_the_air'\r\n\r\n}\r\nexport const person = {\r\n    popular: 'popular',\r\n    movie_credits: 'movie_credits'\r\n}\r\n\r\nconst ConfigApi = {\r\n    getMoviesList: (category, params) => {\r\n        const the_url = 'movie/' + movie[category];\r\n        return AxiosUser.get(the_url, params);\r\n    },\r\n    getTvList: (category, params) => {\r\n        const the_url = 'tv/' + tv[category];\r\n        return AxiosUser.get(the_url, params);\r\n    },\r\n    getPersonList: (category, params) => {\r\n        const the_url = 'person/' + person[category];\r\n        return AxiosUser.get(the_url, params);\r\n    },\r\n    getVideos: (type, id) => {\r\n        const the_url = category[type] + '/' + id + '/videos';\r\n        return AxiosUser.get(the_url, {params: {}});\r\n    },\r\n    \r\n    search: (type, params) => {\r\n        const the_url = 'search/' + category[type];\r\n        return AxiosUser.get(the_url, params);\r\n    },\r\n    type: (type, id, params) => {\r\n        const the_url = category[type] + '/' + id;\r\n        return AxiosUser.get(the_url, params);\r\n    },\r\n    credits: (type, id) => {\r\n        const the_url = category[type] + '/' + id + '/credits';\r\n        return AxiosUser.get(the_url, {params: {}});\r\n    },\r\n    \r\n    similar: (type, id) => {\r\n        const the_url = category[type] + '/' + id + '/similar';\r\n        return AxiosUser.get(the_url, {params: {}});\r\n    }\r\n   \r\n}\r\n\r\nexport default ConfigApi;"]},"metadata":{},"sourceType":"module"}