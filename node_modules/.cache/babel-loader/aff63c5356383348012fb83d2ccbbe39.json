{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyecto\\\\react-wikishow\\\\src\\\\components\\\\modal\\\\Modal.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './modal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  _s();\n\n  //Decimos que el estado del trailer , es inactivo\n  const [active] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.id,\n    className: `modal ${active ? 'active' : ''}`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Modal, \"N4j/9tQxqRi9DfVU7k7axTKgqsE=\");\n\n_c = Modal;\nexport const ModalContent = props => {\n  _s2();\n\n  const contentRef = useRef(null); //Importante si esta propiedad si cerramos el trailer, se seguira reproduciendo en segundo plano\n\n  const closeModal = () => {\n    contentRef.current.parentNode.classList.remove('active');\n    if (props.onClose) props.onClose();\n  }; //Con este return conseguimos que apareza el trailer\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: contentRef,\n    className: \"modal_content\",\n    children: [props.children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal_content__close\",\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bx bx-x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ModalContent, \"76RymMQDwORkpkOdsElhIIY+DNc=\");\n\n_c2 = ModalContent;\nexport default Modal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"ModalContent\");","map":{"version":3,"sources":["H:/Proyecto/react-wikishow/src/components/modal/Modal.jsx"],"names":["React","useState","useRef","Modal","props","active","id","children","ModalContent","contentRef","closeModal","current","parentNode","classList","remove","onClose"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AAEA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AAEnB;AACA,QAAM,CAACC,MAAD,IAAWJ,QAAQ,CAAC,KAAD,CAAzB;AAEA,sBACI;AAAK,IAAA,EAAE,EAAEG,KAAK,CAACE,EAAf;AAAmB,IAAA,SAAS,EAAG,SAAQD,MAAM,GAAG,QAAH,GAAc,EAAG,EAA9D;AAAA,cACKD,KAAK,CAACG;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAVD;;GAAMJ,K;;KAAAA,K;AAYN,OAAO,MAAMK,YAAY,GAAGJ,KAAK,IAAI;AAAA;;AAEjC,QAAMK,UAAU,GAAGP,MAAM,CAAC,IAAD,CAAzB,CAFiC,CAIjC;;AACA,QAAMQ,UAAU,GAAG,MAAM;AACrBD,IAAAA,UAAU,CAACE,OAAX,CAAmBC,UAAnB,CAA8BC,SAA9B,CAAwCC,MAAxC,CAA+C,QAA/C;AACA,QAAIV,KAAK,CAACW,OAAV,EAAmBX,KAAK,CAACW,OAAN;AACtB,GAHD,CALiC,CAUjC;;;AACA,sBACI;AAAK,IAAA,GAAG,EAAEN,UAAV;AAAsB,IAAA,SAAS,EAAC,eAAhC;AAAA,eACKL,KAAK,CAACG,QADX,eAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,OAAO,EAAEG,UAA/C;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAnBM;;IAAMF,Y;;MAAAA,Y;AAoBb,eAAeL,KAAf","sourcesContent":["import React, { useState, useRef } from 'react';\n\nimport './modal.scss';\n\nconst Modal = props => {\n\n    //Decimos que el estado del trailer , es inactivo\n    const [active] = useState(false);\n\n    return (\n        <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\n            {props.children}\n        </div>\n    );\n}\n\nexport const ModalContent = props => {\n\n    const contentRef = useRef(null);\n\n    //Importante si esta propiedad si cerramos el trailer, se seguira reproduciendo en segundo plano\n    const closeModal = () => {\n        contentRef.current.parentNode.classList.remove('active');\n        if (props.onClose) props.onClose();\n    }\n\n    //Con este return conseguimos que apareza el trailer\n    return (\n        <div ref={contentRef} className=\"modal_content\">\n            {props.children}\n            <div className=\"modal_content__close\" onClick={closeModal}>\n                <i className=\"bx bx-x\"></i>\n            </div>\n        </div>\n    )\n}\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}