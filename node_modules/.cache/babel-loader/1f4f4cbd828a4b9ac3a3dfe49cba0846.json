{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyecto\\\\react-wikishow\\\\src\\\\components\\\\video-list\\\\VideoList.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport ConfigApi from '../../api/ConfigApi';\nimport './video-list.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoList = props => {\n  _s();\n\n  const {\n    category\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    const getVideos = async () => {\n      const res = await ConfigApi.getVideos(category, props.id);\n      setVideos(res.results.slice(0, 4));\n    };\n\n    getVideos();\n  }, [category, props.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(Video, {\n      video: video\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n\n_s(VideoList, \"5pQh/qMoQBbcpRaFCCA51Gq5JtU=\", false, function () {\n  return [useParams];\n});\n\n_c = VideoList;\n\nconst Video = props => {\n  _s2();\n\n  const video = props.video;\n  const iframe = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"name-trailer\",\n        children: video.title || video.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: `https://www.youtube.com/embed/${video.key}`,\n      width: \"100%\",\n      height: \"750px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Video, \"yeoAKYzwHGpzlfLaV/1uTwoJwfI=\");\n\n_c2 = Video;\nexport default VideoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoList\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"sources":["H:/Proyecto/react-wikishow/src/components/video-list/VideoList.jsx"],"names":["React","useState","useEffect","useRef","useParams","ConfigApi","VideoList","props","category","videos","setVideos","getVideos","res","id","results","slice","map","video","index","Video","iframe","title","name","key"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAO,mBAAP;;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEvB,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,SAAS,EAA9B;AAEA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMP,SAAS,CAACM,SAAV,CAAoBH,QAApB,EAA8BD,KAAK,CAACM,EAApC,CAAlB;AACAH,MAAAA,SAAS,CAACE,GAAG,CAACE,OAAJ,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAD,CAAT;AACH,KAHD;;AAIAJ,IAAAA,SAAS;AACZ,GANQ,EAMN,CAACH,QAAD,EAAWD,KAAK,CAACM,EAAjB,CANM,CAAT;AAQA,sBACI;AAAA,cAEQJ,MAAM,CAACO,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACP,QAAC,KAAD;AAAmB,MAAA,KAAK,EAAED;AAA1B,OAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR,mBADJ;AASH,CAvBD;;GAAMZ,S;UAEmBF,S;;;KAFnBE,S;;AAyBN,MAAMa,KAAK,GAAGZ,KAAK,IAAI;AAAA;;AAEnB,QAAMU,KAAK,GAAGV,KAAK,CAACU,KAApB;AAEA,QAAMG,MAAM,GAAGjB,MAAM,CAAC,IAAD,CAArB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8Bc,KAAK,CAACI,KAAN,IAAeJ,KAAK,CAACK;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AACI,MAAA,GAAG,EAAG,iCAAgCL,KAAK,CAACM,GAAI,EADpD;AAEI,MAAA,KAAK,EAAC,MAFV;AAGI,MAAA,MAAM,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlBD;;IAAMJ,K;;MAAAA,K;AAoBN,eAAeb,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router';\n\nimport ConfigApi from '../../api/ConfigApi';\n\nimport './video-list.scss';\n\nconst VideoList = props => {\n\n    const { category } = useParams();\n\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        const getVideos = async () => {\n            const res = await ConfigApi.getVideos(category, props.id);\n            setVideos(res.results.slice(0, 4));\n        }\n        getVideos();\n    }, [category, props.id]);\n\n    return (\n        <>\n            {\n                videos.map((video, index) => (\n                    <Video key={index} video={video} />\n                ))\n            }\n        </>\n    );\n}\n\nconst Video = props => {\n\n    const video = props.video;\n\n    const iframe = useRef(null);\n   \n    return (\n        <div className=\"video\">\n            <div className=\"video__title\">\n                <h2 className='name-trailer'>{video.title || video.name}</h2>\n            </div>\n            <iframe\n                src={`https://www.youtube.com/embed/${video.key}`}\n                width=\"100%\"\n                height=\"750px\"\n            ></iframe>\n        </div>\n    )\n}\n\nexport default VideoList;\n"]},"metadata":{},"sourceType":"module"}