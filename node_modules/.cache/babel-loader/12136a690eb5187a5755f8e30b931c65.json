{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyecto\\\\react-wikishow\\\\src\\\\components\\\\movie-list\\\\MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../../components/button/Boton';\nimport './movie-list.scss';\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport MovieCard from '../movie-card/MovieCard';\nimport SectionFooter from '../section-footer/SectionFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {};\n\n      if (props.type !== 'similar') {\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(props.type, {\n              params\n            });\n            break;\n\n          default:\n            response = await tmdbApi.getTvList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await tmdbApi.similar(props.category, props.id);\n      }\n\n      setItems(response.results);\n    };\n\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        grabCursor: true,\n        spaceBetween: 10,\n        slidesPerView: 'auto',\n        children: items.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(MovieCard, {\n            item: item,\n            category: props.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SectionFooter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section_footer_tv\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/tv\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"small\",\n              children: \"View TV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section_footer_movie\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/movie\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"small\",\n              children: \"View Movies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["H:/Proyecto/react-wikishow/src/components/movie-list/MovieList.jsx"],"names":["React","useState","useEffect","Link","Button","SwiperSlide","Swiper","tmdbApi","category","MovieCard","SectionFooter","MovieList","props","items","setItems","getList","response","params","type","movie","getMoviesList","getTvList","similar","id","results","map","item","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../../components/button/Boton';\n\nimport './movie-list.scss';\n\nimport { SwiperSlide, Swiper } from 'swiper/react';\n\nimport tmdbApi, { category } from '../../api/tmdbApi';\n\nimport MovieCard from '../movie-card/MovieCard';\nimport SectionFooter from '../section-footer/SectionFooter';\n\nconst MovieList = props => {\n\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = {};\n\n            if (props.type !== 'similar') {\n                switch (props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(props.type, { params });\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(props.type, { params });\n\n                }\n            } else {\n                response = await tmdbApi.similar(props.category, props.id);\n            }\n            setItems(response.results);\n        }\n        getList();\n    }, []);\n\n    return (\n        <>\n            <div className=\"movie-list\">\n                <Swiper\n                    grabCursor={true}\n                    spaceBetween={10}\n                    slidesPerView={'auto'}\n                >\n                    {\n                        items.map((item, i) => (\n                            <SwiperSlide key={i}>\n                                <MovieCard item={item} category={props.category} />\n                            </SwiperSlide>\n                        ))\n                    }\n                </Swiper>\n            </div>\n            <SectionFooter>\n                <div className='section_footer'>\n                    <div className=\"section_footer_tv\">\n                        <Link to=\"/tv\">\n                            <Button className=\"small\">View TV</Button>\n                        </Link>\n                    </div>\n                    <div className=\"section_footer_movie\">\n                        <Link to=\"/movie\">\n                            <Button className=\"small\">View Movies</Button>\n                        </Link>\n                    </div>\n                </div>\n            </SectionFooter>\n        </>\n    );\n}\n\n\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}